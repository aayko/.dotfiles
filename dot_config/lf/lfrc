set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id

# Settings
set ratios 1:1
set info size:time

set ignorecase  true
set icons       false
set scrolloff   8
set tabstop     4

cmd unarchive ${{
    case "$f" in
        *.zip) unzip "$f" ;;
        *.tar.gz) tar -xzvf "$f" ;;
        *.tar.bz2) tar -xjvf "$f" ;;
        *.tar.xz) tar -xJvf "$f" ;;
        *.tar) tar -xvf "$f" ;;
        *.rar) unrar -x "$f" ;;
        *.7z) 7z -x "$f";;
        *) echo "Unsupported format" ;;
        esac

}}

cmd unarchive-delete ${{
    case "$f" in
        *.zip) unzip "$f" && trash "$f" ;;
        *.tar.gz) tar -xzvf "$f" && trash "$f" ;;
        *.tar.bz2) tar -xjvf "$f" && trash "$f" ;;
        *.tar.xz) tar -xJvf "$f" && trash "$f" ;;
        *.tar) tar -xvf "$f" && trash "$f" ;;
        *.rar) unrar -x "$f" && trash "$f" ;;
        *.7z) 7z -x "$f" && trash "$f" ;;
        *) echo "Unsupported format" ;;
        esac
}}

cmd trash ${{
    files=$(printf "$fx" | tr '\n' ';')
    while [ "$files" ]; do
        file=${files%%;*}

        trash-put "$(basename "$file")"
        if [ "$files" = "$file" ]; then
            files=''
        else
            files="${files#*;}"
        fi
    done
}}

cmd restore_trash ${{
    trash-restore
}}

cmd su ${{
    lf -remote "send $id quit"
    sudo lf
}}

cmd zip push :$zip<space>-r
cmd tar push :$tar<space>cvf<space>.tar<left><left><left><left>

# Bindings
clearmaps

map q quit
map f find

map F find-back
map ; find-next
map , find-prev
map / search
map ? search-back
map n search-next
map N search-prev

map . set hidden!
map ` !true

map A :rename; cmd-end
map c push A<c-u>
map I :rename; cmd-home
map a :rename

map D trash
map r restore_trash
map y copy
map p paste
map C clear
map x cut
map \$ push :$

map t toggle
map <space> :toggle; down
map v invert
map s invert-below
map S su
map u unselect

map R :source /home/$USER/.config/lf/lfrc; reload

map j down
map k up
map h updir
map l open
map <c-u> half-up
map <c-d> half-down
map ] jump-next
map [ jump-prev
map gg top
map G bottom
map ms mark-save
map "'" mark-load
map '"' mark-remove

map e $$EDITOR "$f"
map E $sudoedit "$f"

map zu unarchive
map zd unarchive-delete
map zz zip
map zt tar

map P ${{
    echo "$f" | xsel -ib
    lf -remote 'send echo "Path copied to clipboard"'
}}

map <enter> &mimeopen "$f"
map o $clear; mimeopen --ask "$f"
map O &dragon "$f"

map md push :%mkdir<space>
map mf push :%touch<space>

map = ${{
    [[ -x "$f" ]] && chmod -x "$f" || chmod +x "$f"
    lf -remote 'send reload'
}}

map w ${{
    sudo chown -R $(whoami) "$f"
    lf -remote 'send reload'
}}

# movement
map g/ cd /
map gh cd /home/$USER/

map gd cd /home/$USER/documents
map gD cd /home/$USER/downloads
map gp cd /home/$USER/perso
map gu cd /home/$USER/uni
map gr cd /home/$USER/repos
map gP cd /home/$USER/pictures
map gv cd /home/$USER/pictures/videos
map gc cd /home/$USER/.config
map gl cd /home/$USER/.local
map gb cd /home/$USER/.local/bin
map gt cd /home/$USER/.local/share/Trash/files
map gz cd /home/$USER/.local/share/chezmoi
map ga cd /usr/share/applications
map gm cd /run/media/$USER
map gn cd /run/current-system/
map ge cd /home/$USER/.config/nix
