{{- if eq .chezmoi.os "linux" -}}
#!/usr/bin/bash
set -eo pipefail

if ! command -v yay > /dev/null; then
    sudo pacman -S --needed --noconfirm git base-devel
    git clone https://aur.archlinux.org/yay.git /tmp/yay
    cd /tmp/yay
    makepkg -si --noconfirm
    rm -rf /tmp/yay
    echo "yay installed"
fi

if [[ ! -f /etc/zsh/zshenv ]]; then
	sudo tee /etc/zsh/zshenv > /dev/null <<- EOF
	export ZDOTDIR="/home/$USER/.config/zsh"
	EOF
fi

if [ ! -L /etc/ly/config.ini ] && [ -f /etc/ly/config.ini ]; then
	[ -f /etc/ly/xsetup.sh ] && sudo rm -f /etc/ly/xsetup.sh
	[ -f /etc/ly/config.ini ] && sudo rm -f /etc/ly/config.ini
	sudo ln -s /home/"$USER"/.config/ly/xsetup.sh /etc/ly/xsetup.sh
	sudo ln -s /home/"$USER"/.config/ly/config.ini /etc/ly/config.ini
	sudo tee /etc/pam.d/ly > /dev/null <<- EOF
	#%PAM-1.0

	auth       include      login
	auth       optional     pam_gnome_keyring.so
	account    include      login
	password   include      login
	session    include      login
	session    optional     pam_gnome_keyring.so auto_start
	EOF
	if ! systemctl is-enabled --quiet ly.service; then
	    systemctl enable ly.service
	fi
	echo "Ly setup and enabled"
fi

keyboard_layout=$(setxkbmap -query | grep layout | awk '{print $2}')
if [[ $keyboard_layout != "pwerty" ]]; then
    mkdir -p /home/"$USER"/.config/xkb/
    sudo cp /home/"$USER"/.config/xkb/pwerty /usr/share/X11/xkb/symbols/
    localectl set-x11-keymap pwerty "" "" compose:ralt,altwin:swap_lalt_lwin
    echo "Keyboard layout set to pwerty"
fi

sudo mkdir -p /etc/X11/xorg.conf.d/
{{ if .desktop -}}
if [ ! -f /etc/modprobe.d/disable-bluetooth.conf ]; then
	sudo tee /etc/modprobe.d/disable-bluetooth.conf > /dev/null <<- EOF
	blacklist btusb
	EOF
	echo "Bluetooth module disabled"
fi

if [ ! -f /etc/X11/xorg.conf.d/10-monitor.conf ]; then
	sudo tee /etc/X11/xorg.conf.d/10-monitor.conf > /dev/null <<- EOF
	Section "Extensions"
	    Option "DPMS" "Disable"
	EndSection
	EOF
	echo "Disabled DPMS"
fi
{{- end }}

if [ ! -f /etc/X11/xorg.conf.d/50-key-repeat.conf ]; then
	sudo tee /etc/X11/xorg.conf.d/50-key-repeat.conf > /dev/null <<- EOF
	Section "InputClass"
	        Identifier "system-keyboard"
	        MatchIsKeyboard "on"
	        Option "AutoRepeat" "200 30"
	EndSection
	EOF
	echo "Faster key repeat rate set"
fi

if [ ! -f /etc/X11/xorg.conf.d/50-mouse-acceleration.conf ]; then
	sudo tee /etc/X11/xorg.conf.d/50-mouse-acceleration.conf > /dev/null <<- EOF
	Section "InputClass"
	        Identifier "My Mouse"
	        MatchIsPointer "yes"
	        Option "AccelerationProfile" "-1"
	        Option "AccelerationScheme" "none"
	        Option "AccelSpeed" "-1"
	EndSection
	EOF
	echo "Mouse acceleration disabled"
fi

{{ if .laptop -}}
if [ ! -f /etc/modprobe.d/nobeep.conf ]; then
	sudo tee /etc/modprobe.d/nobeep.conf > /dev/null <<- EOF
	blacklist pcspkr
	blacklist snd_pcspsudo
	EOF
	echo "Laptop speaker disabled"
fi


if ! yay -Q i3lock-color &> /dev/null; then
    yay -S --noconfirm --sudoloop i3lock-color
fi

if ! yay -Q interception-caps2esc &> /dev/null; then
    yay -S --noconfirm --sudoloop interception-caps2esc
fi

if [ ! -f /etc/udevmon.yaml ]; then
	sudo tee /etc/udevmon.yaml > /dev/null <<- EOF
	- JOB: "intercept -g $DEVNODE | caps2esc | uinput -d $DEVNODE"
	  DEVICE:
	    EVENTS:
	      EV_KEY: [KEY_CAPSLOCK, KEY_ESC]
	EOF
fi
if [ ! -f /etc/systemd/system/udevmon.service ]; then
	sudo tee /etc/systemd/system/udevmon.service > /dev/null <<- EOF
	[Unit]
	Description=udevmon
	Wants=systemd-udev-settle.service
	After=systemd-udev-settle.service

	[Service]
	ExecStart=/usr/bin/nice -n -20 /usr/local/bin/udevmon -c /etc/udevmon.yaml

	[Install]
	WantedBy=multi-user.target
	EOF
	systemctl enable udevmon.service --now
	echo "caps2esc installed and enabled"
fi
{{- end }}

{{ if .development -}}
if [[ $(rustup default 2>&1) == *"no default"* ]]; then
    rustup default stable
    echo "Default rust toolchain set to stable"
fi

if ! command -v ghcup > /dev/null; then
    curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh
    sudo ln -s /home/"$USER"/.ghcup/bin/* /usr/local/bin/
    echo "Ghcup installed"
fi
{{- end }}

if [[ ! -d /home/$USER/.local/share/zap ]]; then
    zsh <(curl -s https://raw.githubusercontent.com/zap-zsh/zap/master/install.zsh) --keep --branch release-v1
    echo "Zap installed"
    chsh -s /usr/bin/zsh "$USER"
fi

{{- end }}
